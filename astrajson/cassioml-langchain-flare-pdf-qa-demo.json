{
  "key": "cassioml-langchain-flare-pdf-qa-demo",
  "tags": ["vector", "astradb", "pdf", "flare", "cassio", "python", "openai"],
  "urls": {
    "github": "https://github.com/CassioML/langchain-flare-pdf-qa-demo",
    "heroimage": "https://raw.githubusercontent.com/datastaxdevs/gallery_content_loader/main/datastax-logo_square.png"
  },
  "last_modified": "Wed, 06 Dec 2023 06:50:01 GMT",
  "forks_count": 6,
  "stargazers_count": 13,
  "name": "PDF FLARE demo with Langchain and AstraDB",
  "description": "Ingest PDF files from their URL into an Astra DB vector store and run FLARE Question-Answering on them.",
  "duration": "2h",
  "skilllevel": "Intermediate",
  "priority": 1,
  "readme": "<h1>PDF FLARE demo with Langchain and Cassandra as Vector Store</h1>\n<h2>What</h2>\n<p>Ingest PDF files from their URL into an Astra DB vector store<br />\nand run FLARE Question-Answering on them.</p>\n<p>Features:</p>\n<ul>\n<li>Python API (CassIO, LangChain, FastAPI) + React client (Typescript)</li>\n<li>per-user store of ingested documents</li>\n<li>Other Q-A methods in comparison</li>\n<li>Start-with-a-click on Gitpod</li>\n</ul>\n<p>For some architectural/flow diagrams, check out <a href=\"images/diagrams\">this dir</a>.</p>\n<h2>Prerequisites</h2>\n<p>You need:</p>\n<ul>\n<li>an <a href=\"https://astra.datastax.com\">Astra</a> Vector Database (free tier is fine!). <strong>You'll be asked to supply a <a href=\"https://awesome-astra.github.io/docs/pages/astra/create-token/#c-procedure\">Database Administrator token</a></strong>, the string starting with <code>AstraCS:...</code>;</li>\n<li>likewise, get your <a href=\"https://awesome-astra.github.io/docs/pages/astra/faq/#where-should-i-find-a-database-identifier\">Database ID</a> ready, you will have to enter it;</li>\n<li>an <strong>OpenAI API Key</strong>. (More info <a href=\"https://cassio.org/start_here/#llm-access\">here</a>, note that out-of-the-box this demo supports OpenAI unless you tinker with the code.)</li>\n</ul>\n<details><summary><i>Note:</i> If you have switched Astra to the <b>New Vector Developer Experience UI</b>, click here for instructions on the DB credentials.\n</summary>\n<p>Go to your database dashboard and click on the &quot;Connection Details&quot; button on the right. A dialog will open with instructions for connecting. You'll do two things:</p>\n<ul>\n<li>click &quot;Generate Token&quot; and copy the <code>AstraCS:...</code> string in its entirety once that appears on the dialog;</li>\n<li>locate the <code>api_endpoint=...</code> line in the Python code example. The database ID is the sequence after <code>https://</code> and before the dash + region name (e.g. <code>-us-east1</code>) in the definition of the endpoint. It looks like <code>01234567-89ab-cdef-0123-456789abcdef</code> (and has always this length).</li>\n</ul>\n<p><img src=\"images/new_vector_ui.png\" alt=\"DB credentials in the Vector Developer Experience\" /></p>\n</details>\n<h2>How-to (Gitpod)</h2>\n<p>Click this button, confirm opening of the workspace<br />\n(you might need to do a Gitpod login in the process) and wait 1-2 minutes:<br />\ninstructions will show up in the console below, where you'll have<br />\nto provide connection details and OpenAI key when prompted.</p>\n<p>In the meantime, the app will open in the top panel.</p>\n<p><a href=\"https://gitpod.io/#https://github.com/cassioml/langchain-flare-pdf-qa-demo\"><img src=\"images/open_in_gitpod.svg\" /></a></p>\n<h2>How-to (local run)</h2>\n<h3>API</h3>\n<p>Create a Python <code>3.8+</code> virtual environment and install<br />\nthe dependencies in <code>requirements.txt</code>.</p>\n<p>Make a copy <code>cp .env.template .env</code> and set the secrets for your DB and OpenAI.</p>\n<p>Finally enter the subdirectory and launch the API:</p>\n<pre><code>cd api\nuvicorn api:app\n</code></pre>\n<h4>Use a Cassandra cluster</h4>\n<p>To use a Cassandra cluster instead of Astra DB, check the <code>.env.template</code> file:<br />\nuncomment the <code>USE_CASSANDRA_CLUSTER</code> environment variable in your <code>.env</code><br />\nand provide the necessary connection parameters (keyspace name, plus:<br />\ncontact points and/or authentication if required).</p>\n<p>The next time you start the API, it will attempt connecting to Cassandra.</p>\n<h3>Client</h3>\n<p>You need a modern Node.js. Enter the subdirectory and install the dependencies:</p>\n<pre><code>cd app\nnpm install\n</code></pre>\n<p>If the API is running you can launch the client:</p>\n<pre><code>npm start\n</code></pre>\n<p>and point your browser to local port 3000.</p>\n<p><em>(Note: if the API run elsewhere, you can launch <code>REACT_APP_API_BASE_URL=&quot;http://something...&quot; npm start</code>.)</em></p>\n<h4>User journey</h4>\n<p>First, &quot;log in&quot; (mocked) with a made-up username.</p>\n<p>Then you access the panel. Go to the &quot;Docs&quot; panel, where you can load pdf files<br />\nby entering their URL (click on the &quot;i&quot; icon to get example URLs to paste).</p>\n<p>You can &quot;Ask questions&quot;, comparing different methods (FLARE/RAG/Plain LLM) and<br />\ntheir answers.</p>\n",
  "readme_markdown": "# PDF FLARE demo with Langchain and Cassandra as Vector Store\n\n## What\n\nIngest PDF files from their URL into an Astra DB vector store\nand run FLARE Question-Answering on them.\n\nFeatures:\n\n- Python API (CassIO, LangChain, FastAPI) + React client (Typescript)\n- per-user store of ingested documents\n- Other Q-A methods in comparison\n- Start-with-a-click on Gitpod\n\nFor some architectural/flow diagrams, check out [this dir](images/diagrams).\n\n## Prerequisites\n\nYou need:\n\n- an [Astra](https://astra.datastax.com) Vector Database (free tier is fine!). **You'll be asked to supply a [Database Administrator token](https://awesome-astra.github.io/docs/pages/astra/create-token/#c-procedure)**, the string starting with `AstraCS:...`;\n- likewise, get your [Database ID](https://awesome-astra.github.io/docs/pages/astra/faq/#where-should-i-find-a-database-identifier) ready, you will have to enter it;\n- an **OpenAI API Key**. (More info [here](https://cassio.org/start_here/#llm-access), note that out-of-the-box this demo supports OpenAI unless you tinker with the code.)\n\n<details><summary><i>Note:</i> If you have switched Astra to the <b>New Vector Developer Experience UI</b>, click here for instructions on the DB credentials.\n</summary>\n\nGo to your database dashboard and click on the \"Connection Details\" button on the right. A dialog will open with instructions for connecting. You'll do two things:\n\n- click \"Generate Token\" and copy the `AstraCS:...` string in its entirety once that appears on the dialog;\n- locate the `api_endpoint=...` line in the Python code example. The database ID is the sequence after `https://` and before the dash + region name (e.g. `-us-east1`) in the definition of the endpoint. It looks like `01234567-89ab-cdef-0123-456789abcdef` (and has always this length).\n\n![DB credentials in the Vector Developer Experience](images/new_vector_ui.png)\n\n</details>\n\n\n## How-to (Gitpod)\n\nClick this button, confirm opening of the workspace\n(you might need to do a Gitpod login in the process) and wait 1-2 minutes:\ninstructions will show up in the console below, where you'll have\nto provide connection details and OpenAI key when prompted.\n\nIn the meantime, the app will open in the top panel.\n\n<a href=\"https://gitpod.io/#https://github.com/cassioml/langchain-flare-pdf-qa-demo\"><img src=\"images/open_in_gitpod.svg\" /></a>\n\n## How-to (local run)\n\n### API\n\nCreate a Python `3.8+` virtual environment and install\nthe dependencies in `requirements.txt`.\n\nMake a copy `cp .env.template .env` and set the secrets for your DB and OpenAI.\n\nFinally enter the subdirectory and launch the API:\n\n```\ncd api\nuvicorn api:app\n```\n\n#### Use a Cassandra cluster\n\nTo use a Cassandra cluster instead of Astra DB, check the `.env.template` file:\nuncomment the `USE_CASSANDRA_CLUSTER` environment variable in your `.env`\nand provide the necessary connection parameters (keyspace name, plus:\ncontact points and/or authentication if required).\n\nThe next time you start the API, it will attempt connecting to Cassandra.\n\n### Client\n\nYou need a modern Node.js. Enter the subdirectory and install the dependencies:\n\n```\ncd app\nnpm install\n```\n\nIf the API is running you can launch the client:\n\n```\nnpm start\n```\n\nand point your browser to local port 3000.\n\n_(Note: if the API run elsewhere, you can launch `REACT_APP_API_BASE_URL=\"http://something...\" npm start`.)_\n\n#### User journey\n\nFirst, \"log in\" (mocked) with a made-up username.\n\nThen you access the panel. Go to the \"Docs\" panel, where you can load pdf files\nby entering their URL (click on the \"i\" icon to get example URLs to paste).\n\nYou can \"Ask questions\", comparing different methods (FLARE/RAG/Plain LLM) and\ntheir answers.\n",
  "_id": "cassioml-langchain-flare-pdf-qa-demo"
}
