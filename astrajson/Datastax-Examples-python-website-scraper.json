{
  "key": "Datastax-Examples-python-website-scraper",
  "tags": [
    "python",
    "selenium",
    "video",
    "datastax",
    "astradb",
    "fastapi",
    "cassandra",
    "dev",
    "tutorials"
  ],
  "urls": {
    "github": "https://github.com/DataStax-Examples/python-website-scraper",
    "heroimage": "https://raw.githubusercontent.com/DataStax-Examples/python-website-scraper/master/hero.jpeg"
  },
  "last_modified": "Thu, 19 Oct 2023 23:33:17 GMT",
  "forks_count": 4,
  "stargazers_count": 6,
  "name": "Build a Website Scraper with Astra DB + Python",
  "description": "Learn how to scrape websites with Astra DB, Python, Selenium, Requests HTML, Celery, & FastAPI.",
  "duration": "180 minutes",
  "skilllevel": "Advanced",
  "priority": 3,
  "readme": "<!--- STARTEXCLUDE --->\n<h1>Build a Website Scraper with Astra DB + Python</h1>\n<p><em>180 minutes, Advanced, <a href=\"https://github.com/DataStax-Examples/python-website-scraper/blob/master/README.md\">Start Building</a></em></p>\n<p>Learn how to scrape websites with Astra DB, Python, Selenium, Requests HTML, Celery, &amp; FastAPI by following along with CodingEntrepreneurs' video, located <a href=\"https://youtu.be/NyDT3KkscSk\">here</a>.</p>\n<!--- ENDEXCLUDE --->\n<p><img src=\"https://raw.githubusercontent.com/DataStax-Examples/python-website-scraper/master/hero.jpeg\" alt=\"image\" /></p>\n<h2>Quick Start</h2>\n<!--- STARTEXCLUDE --->\n<ul>\n<li><a href=\"https://dtsx.io/3ogyCAI\">Signup for DataStax Astra</a>, or login to your already existing account.</li>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db\">Create an Astra DB Database</a> if you don't already have one.</li>\n</ul>\n<!--- ENDEXCLUDE --->\n<ul>\n<li>\n<p><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db-keyspace\">Create an Astra DB Keyspace</a> called <code>sag_python_scraper</code> in your database.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-application-token\">Generate an Application Token</a> with the role of <code>Database Administrator</code> for the Organization that your Astra DB is in.</p>\n</li>\n<li>\n<p>Get your <a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#get-an-astra-db-secure-connect-bundle\">secure connect bundle</a> from the connect page of your database and save it to your project folder. Rename it to <code>bundle.zip</code></p>\n</li>\n<li>\n<p>Setup your system: Below is a preflight checklist to ensure you system is fully setup to work with this course. All guides and setup can be found in the <a href=\"https://github.com/DataStax-Examples/python-website-scraper/tree/master/setup\">setup</a> directory of this repo.</p>\n<ul>\n<li>Install Selenium &amp; Chromedriver - <a href=\"https://github.com/DataStax-Examples/python-website-scraper/tree/master/setup/Install%20Selenium%20%26%20Chromedriver%20on%20your%20System.md\">setup guide</a></li>\n<li>Install Redis  - <a href=\"https://github.com/DataStax-Examples/python-website-scraper/tree/master/setup/Setup%20Redis.md\">setup guide</a></li>\n<li>Create a virtual environment &amp; install dependencies</li>\n<li>Setup an account with DataStax</li>\n<li>Create your first AstraDB and get API credentials</li>\n<li>Use <code>cassandra-driver</code> to verify your connection to AstraDB</li>\n</ul>\n</li>\n</ul>\n<h2>How this works</h2>\n<p>Follow along in this video tutorial: <a href=\"https://youtu.be/NyDT3KkscSk\">https://youtu.be/NyDT3KkscSk</a>.</p>\n<p>This series is broken up into 4 parts:</p>\n<ul>\n<li><strong>Scraping</strong> How to scrape and parse data from nearly any website with Selenium &amp; Requests HTML.</li>\n<li><strong>Data models</strong> how to store and validate data with <code>cassandra-driver</code>, <code>pydantic</code>, and <strong>AstraDB</strong>.</li>\n<li><strong>Worker &amp; Scheduling</strong> how to schedule periodic tasks (ie scraping) integrated with Redis &amp; AstraDB</li>\n<li><strong>Presentation</strong> How to combine the above steps in as robust web application service</li>\n</ul>\n<p>Here's what each tool is used for:</p>\n<ul>\n<li><strong>Python 3.9</strong> <a href=\"https://www.python.org/download/\">download</a> - programming the logic.</li>\n<li><strong>AstraDB</strong> <a href=\"https://dtsx.io/3ogyCAI\">sign up</a> - highly perfomant and scalable database service by DataStax. AstraDB is a Cassandra NoSQL Database. <a href=\"https://cassandra.apache.org/_/index.html\">Cassandra</a> is used by Netflix, Discord, Apple, and many others to handle astonding amounts of data.</li>\n<li><strong>Selenium</strong> <a href=\"https://selenium-python.readthedocs.io/\">docs</a> - an automated web browsing experience that allows:\n<ul>\n<li>Run all web-browser actions through code</li>\n<li>Loads JavaScript heavy websites</li>\n<li>Can perform standard user interaction like clicks, form submits, logins, etc.</li>\n</ul>\n</li>\n<li><strong>Requests HTML</strong> <a href=\"https://docs.python-requests.org/\">docs</a> - we're going to use this to parse an HTML document extracted from Selenium</li>\n<li><strong>Celery</strong> <a href=\"https://docs.celeryproject.org/\">docs</a> - Celery providers worker processes that will allow us to schedule when we need to scrape websites. We'll be using <a href=\"https://redis.io/\">redis</a> as our task queue.</li>\n<li><strong>FastAPI</strong> <a href=\"https://fastapi.tiangolo.com/\">docs</a> - as a web application framework to Display and monitor web scraping results from anywhere</li>\n</ul>\n",
  "_id": "Datastax-Examples-python-website-scraper",
  "readme_markdown": "<!--- STARTEXCLUDE --->\n# Build a Website Scraper with Astra DB + Python\n*180 minutes, Advanced, [Start Building](https://github.com/DataStax-Examples/python-website-scraper/blob/master/README.md)*\n\nLearn how to scrape websites with Astra DB, Python, Selenium, Requests HTML, Celery, & FastAPI by following along with CodingEntrepreneurs' video, located [here](https://youtu.be/NyDT3KkscSk).\n<!--- ENDEXCLUDE --->\n\n![image](https://raw.githubusercontent.com/DataStax-Examples/python-website-scraper/master/hero.jpeg)\n\n## Quick Start\n<!--- STARTEXCLUDE --->\n* [Signup for DataStax Astra](https://dtsx.io/3ogyCAI), or login to your already existing account. \n* [Create an Astra DB Database](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db) if you don't already have one.\n<!--- ENDEXCLUDE --->\n* [Create an Astra DB Keyspace](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db-keyspace) called `sag_python_scraper` in your database.\n* [Generate an Application Token](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-application-token) with the role of `Database Administrator` for the Organization that your Astra DB is in.\n* Get your [secure connect bundle](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#get-an-astra-db-secure-connect-bundle) from the connect page of your database and save it to your project folder. Rename it to `bundle.zip`\n\n* Setup your system: Below is a preflight checklist to ensure you system is fully setup to work with this course. All guides and setup can be found in the [setup](https://github.com/DataStax-Examples/python-website-scraper/tree/master/setup) directory of this repo.\n  * Install Selenium & Chromedriver - [setup guide](https://github.com/DataStax-Examples/python-website-scraper/tree/master/setup/Install%20Selenium%20%26%20Chromedriver%20on%20your%20System.md)\n  * Install Redis  - [setup guide](https://github.com/DataStax-Examples/python-website-scraper/tree/master/setup/Setup%20Redis.md)\n  * Create a virtual environment & install dependencies\n  * Setup an account with DataStax\n  * Create your first AstraDB and get API credentials\n  * Use `cassandra-driver` to verify your connection to AstraDB\n\n\n  \n## How this works\nFollow along in this video tutorial: [https://youtu.be/NyDT3KkscSk](https://youtu.be/NyDT3KkscSk).\n\nThis series is broken up into 4 parts:\n- **Scraping** How to scrape and parse data from nearly any website with Selenium & Requests HTML. \n- **Data models** how to store and validate data with `cassandra-driver`, `pydantic`, and **AstraDB**.\n- **Worker & Scheduling** how to schedule periodic tasks (ie scraping) integrated with Redis & AstraDB\n- **Presentation** How to combine the above steps in as robust web application service\n\nHere's what each tool is used for:\n- **Python 3.9** [download](https://www.python.org/download/) - programming the logic.\n- **AstraDB** [sign up](https://dtsx.io/3ogyCAI) - highly perfomant and scalable database service by DataStax. AstraDB is a Cassandra NoSQL Database. [Cassandra](https://cassandra.apache.org/_/index.html) is used by Netflix, Discord, Apple, and many others to handle astonding amounts of data.\n- **Selenium** [docs](https://selenium-python.readthedocs.io/) - an automated web browsing experience that allows:\n  - Run all web-browser actions through code\n  - Loads JavaScript heavy websites\n  - Can perform standard user interaction like clicks, form submits, logins, etc.\n- **Requests HTML** [docs](https://docs.python-requests.org/) - we're going to use this to parse an HTML document extracted from Selenium\n- **Celery** [docs](https://docs.celeryproject.org/) - Celery providers worker processes that will allow us to schedule when we need to scrape websites. We'll be using [redis](https://redis.io/) as our task queue.\n- **FastAPI** [docs](https://fastapi.tiangolo.com/) - as a web application framework to Display and monitor web scraping results from anywhere\n"
}
