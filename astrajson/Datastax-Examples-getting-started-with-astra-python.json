{
    "key": "Datastax-Examples-getting-started-with-astra-python",
    "tags": [
        "labs",
        "python",
        "python driver",
        "dev",
        "ds-bulk",
        "astradb",
        "flask",
        "cassandra",
        "tutorials"
    ],
    "urls": {
        "github": "https://github.com/DataStax-Examples/getting-started-with-astra-python",
        "heroimage": "https://raw.githubusercontent.com/DataStax-Examples/sample-app-template/master/screenshots/astra-sample-app-default.png"
    },
    "last_modified": "Wed, 14 Jun 2023 23:17:26 GMT",
    "forks_count": 14,
    "stargazers_count": 19,
    "name": "Getting Started with Python + Astra DB",
    "description": "This sample Python backend provides a REST API service that is used with AstraDB to show a simple connection example.",
    "duration": "50 minutes",
    "skilllevel": "Intermediate",
    "priority": 3,
    "readme": "<!--- STARTEXCLUDE --->\n<h1>Getting Started with Apache Cassandra\u2122 and Python using DataStax Astra DB</h1>\n<p><em>50 minutes, Intermediate, <a href=\"https://github.com/DataStax-Examples/getting-started-with-astra-python#prerequisites\">Start Building</a></em></p>\n<p>This sample Python backend provides a REST API service that is used with the <a href=\"https://github.com/DataStax-Examples/getting-started-with-astra-ui\">Getting Started with Astra UI</a> to show a<br />\nsimple example of how to connect to and query DataStax Astra DBs.</p>\n<!--- ENDEXCLUDE --->\n<p><img src=\"https://raw.githubusercontent.com/DataStax-Examples/sample-app-template/master/screenshots/astra-sample-app-default.png\" alt=\"image\" /></p>\n<h2>Astra DB Quick Start</h2>\n<!--- STARTEXCLUDE --->\n<ul>\n<li><a href=\"https://dtsx.io/38B5JGj\">Signup for DataStax Astra</a>, or login to your already existing account.</li>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db\">Create an Astra DB Database</a> if you don't already have one.</li>\n</ul>\n<!--- ENDEXCLUDE --->\n<ul>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db-keyspace\">Create an Astra DB Keyspace</a> called <code>sag_netflix</code> in your database.</li>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-application-token\">Generate an Application Token</a> with the role of <code>Database Administrator</code> for the Organization that your Astra DB is in.</li>\n</ul>\n<h2>Running on your local machine</h2>\n<p>If you are familiar with Python, then you've likely gotten your hands on Python virtual environments.<br />\nWe'll be leveraging pyenv while setting up this backend, which will serve our<br />\nSpacecraft frontend that will have you flying through the stars.</p>\n<p>If you aren't familiar with Python, hop over to our <a href=\"https://helpdocs.datastax.com/aws/dscloud/astra/dscloudPythonDriver.html#Installingpyenv,Python,andvirtualenv\">official documentation</a><br />\nfor setting that up on your machine, and come back here after you have it installed ( specifically after Step 5 of the Procedure ).</p>\n<p>Now that we have that out of the way, we'll use pyenv to install Python 3.6.9</p>\n<pre lang=\"sh\"><code>pyenv install 3.6.9\n</code></pre>\n<p>Next create a new virtualenv using that Python version we just installed.</p>\n<pre lang=\"sh\"><code>pyenv virtualenv 3.6.9 astra-venv\n</code></pre>\n<p>Almost off to the races, go ahead and activate that virtualenv</p>\n<pre lang=\"sh\"><code>pyenv activate astra-venv\n</code></pre>\n<p>Woot, now 3 quick dependencies ( Flask, Flask CORS,  and the DataStax Cassandra Driver )</p>\n<pre lang=\"sh\"><code>pip install Flask flask-cors cassandra-driver\n</code></pre>\n<p>Last one, clone this repo</p>\n<pre lang=\"sh\"><code>git clone https://github.com/DataStax-Examples\n/getting-started-with-astra-python.git\n</code></pre>\n<p>If everything above went smoothly, fingers crossed, then we are ready to rock.<br />\nGo to the directory that you just cloned this repo into</p>\n<pre lang=\"sh\"><code>cd getting-started-with-astra-python\n</code></pre>\n<p>Fire up the engines</p>\n<pre lang=\"sh\"><code>FLASK_ENV=development FLASK_APP=getting_started_with_astra.py flask run\n</code></pre>\n<p>You should be met with the following output, note that it's running on <code>localhost</code> and port <code>5000</code></p>\n<pre lang=\"sh\"><code> * Serving Flask app &quot;getting_started_with_astra.py&quot; (lazy loading)\n * Environment: development\n * Debug mode: on\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with stat\n * Debugger is active!\n * Debugger PIN: 204-527-831\n</code></pre>\n<p>Once the backend is running, you can start the <a href=\"https://github.com/DataStax-Examples/getting-started-with-astra-ui\">Getting Started with Astra UI</a> in order to use a web page that leverages this backend.</p>\n",
    "_id": "Datastax-Examples-getting-started-with-astra-python",
    "readme_markdown": "<!--- STARTEXCLUDE --->\n# Getting Started with Apache Cassandra\u2122 and Python using DataStax Astra DB\n*50 minutes, Intermediate, [Start Building](https://github.com/DataStax-Examples/getting-started-with-astra-python#prerequisites)*\n\nThis sample Python backend provides a REST API service that is used with the [Getting Started with Astra UI](https://github.com/DataStax-Examples/getting-started-with-astra-ui) to show a\nsimple example of how to connect to and query DataStax Astra DBs.\n<!--- ENDEXCLUDE --->\n\n![image](https://raw.githubusercontent.com/DataStax-Examples/sample-app-template/master/screenshots/astra-sample-app-default.png)\n\n## Astra DB Quick Start\n<!--- STARTEXCLUDE --->\n* [Signup for DataStax Astra](https://dtsx.io/38B5JGj), or login to your already existing account. \n* [Create an Astra DB Database](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db) if you don't already have one.\n<!--- ENDEXCLUDE --->\n* [Create an Astra DB Keyspace](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db-keyspace) called `sag_netflix` in your database.\n* [Generate an Application Token](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-application-token) with the role of `Database Administrator` for the Organization that your Astra DB is in.\n\n## Running on your local machine\nIf you are familiar with Python, then you've likely gotten your hands on Python virtual environments.\nWe'll be leveraging pyenv while setting up this backend, which will serve our\nSpacecraft frontend that will have you flying through the stars.\n\nIf you aren't familiar with Python, hop over to our [official documentation](https://helpdocs.datastax.com/aws/dscloud/astra/dscloudPythonDriver.html#Installingpyenv,Python,andvirtualenv)\nfor setting that up on your machine, and come back here after you have it installed ( specifically after Step 5 of the Procedure ).\n\nNow that we have that out of the way, we'll use pyenv to install Python 3.6.9\n```sh\npyenv install 3.6.9\n```\n\nNext create a new virtualenv using that Python version we just installed.\n```sh\npyenv virtualenv 3.6.9 astra-venv\n```\n\nAlmost off to the races, go ahead and activate that virtualenv\n```sh\npyenv activate astra-venv\n```\n\nWoot, now 3 quick dependencies ( Flask, Flask CORS,  and the DataStax Cassandra Driver )\n```sh\npip install Flask flask-cors cassandra-driver\n```\n\nLast one, clone this repo\n```sh\ngit clone https://github.com/DataStax-Examples\n/getting-started-with-astra-python.git\n```\n\nIf everything above went smoothly, fingers crossed, then we are ready to rock.\nGo to the directory that you just cloned this repo into\n```sh\ncd getting-started-with-astra-python\n```\n\nFire up the engines\n```sh\nFLASK_ENV=development FLASK_APP=getting_started_with_astra.py flask run\n```\n\nYou should be met with the following output, note that it's running on `localhost` and port `5000`\n```sh\n * Serving Flask app \"getting_started_with_astra.py\" (lazy loading)\n * Environment: development\n * Debug mode: on\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with stat\n * Debugger is active!\n * Debugger PIN: 204-527-831\n```\n\nOnce the backend is running, you can start the [Getting Started with Astra UI](https://github.com/DataStax-Examples/getting-started-with-astra-ui) in order to use a web page that leverages this backend.\n"
}