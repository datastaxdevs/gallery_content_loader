{
    "key": "Datastax-Examples-astra-loom",
    "tags": [
        "labs",
        "elixir",
        "cassandra",
        "dev",
        "ds-bulk",
        "astradb",
        "gitpod",
        "tutorials"
    ],
    "urls": {
        "github": "https://github.com/DataStax-Examples/astra-loom",
        "gitpod": "https://gitpod.io#https://github.com/DataStax-Examples/astra-loom",
        "heroimage": "https://raw.githubusercontent.com/DataStax-Examples/astra-loom/master/hero.png"
    },
    "last_modified": "Sat, 26 Nov 2022 14:51:52 GMT",
    "forks_count": 0,
    "stargazers_count": 7,
    "name": "Astra DB Loom",
    "description": "Loom is a thread based chat server, where users can send messages to one or more threads via hashtags.",
    "duration": "60 minutes",
    "skilllevel": "Advanced",
    "priority": 3,
    "readme": "<!--- STARTEXCLUDE --->\n<h1>Astra DB Loom</h1>\n<p><em>60 minutes, Advanced, <a href=\"https://github.com/DataStax-Examples/astra-loom#prerequisites\">Start Building</a></em></p>\n<p>Loom is a thread based chat server, where users can send messages to one or more threads via hashtags (ex. &quot;I'm heading to the park at noon #family #friends #frisbee_club&quot; ). Users can subscribe to new threads they see by clicking them and start new threads but just adding a new hashtag to a message.</p>\n<!--- ENDEXCLUDE --->\n<p><img src=\"https://raw.githubusercontent.com/DataStax-Examples/astra-loom/master/hero.png\" alt=\"image\" /></p>\n<h2>Quick Start</h2>\n<!--- STARTEXCLUDE --->\n<ol start=\"0\">\n<li><a href=\"https://dtsx.io/38DEkDw\">Signup for DataStax Astra</a>, or login to your already existing account.</li>\n</ol>\n<!--- ENDEXCLUDE --->\n<ol>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db\">Create an Astra DB Database</a> or use an existing one.</li>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db-keyspace\">Create an Astra DB Keyspace</a> called <code>sag_loom</code> in your database.</li>\n<li><a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-application-token\">Generate an Application Token</a> with the role of <code>Database Administrator</code> for the Organization that your Astra DB is in.</li>\n<li>Click the 'Open in Gitpod' link: <a href=\"https://gitpod.io/#https://github.com/DataStax-Examples/todo-astra-jamstack-netlify\"><img src=\"https://gitpod.io/button/open-in-gitpod.svg\" alt=\"Open in IDE\" /></a></li>\n<li>Once the app is finished launching in the Gitpod IDE, copy the <code>.env.example</code> file to a file named <code>.env</code> and fill the required values in from your Application Token and <a href=\"https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#get-your-astra-db-connection-settings\">Astra DB connection settings</a>.</li>\n<li>Start the example by running the following command in the Gitpod console:</li>\n</ol>\n<pre lang=\"bash\"><code>source .env\nmix phx.server\n</code></pre>\n<h2>How this works</h2>\n<p>The app demonstrates working with DataStax Astra DB, Elixir, and Phoenix Liveviews together. The project attempts to make the best use of this stack. Messages histories are saved and loaded in Astra DB, while new messages are shared via Phoenix channels between all active users in a &quot;thread&quot;. The goal is a fast, scalable, and durable chat/messaging application.</p>\n",
    "_id": "Datastax-Examples-astra-loom",
    "readme_markdown": "<!--- STARTEXCLUDE --->\n# Astra DB Loom\n\n_60 minutes, Advanced, [Start Building](https://github.com/DataStax-Examples/astra-loom#prerequisites)_\n\nLoom is a thread based chat server, where users can send messages to one or more threads via hashtags (ex. \"I'm heading to the park at noon #family #friends #frisbee_club\" ). Users can subscribe to new threads they see by clicking them and start new threads but just adding a new hashtag to a message.\n<!--- ENDEXCLUDE --->\n\n![image](https://raw.githubusercontent.com/DataStax-Examples/astra-loom/master/hero.png)\n\n## Quick Start\n<!--- STARTEXCLUDE --->\n0. [Signup for DataStax Astra](https://dtsx.io/38DEkDw), or login to your already existing account.\n<!--- ENDEXCLUDE --->\n1. [Create an Astra DB Database](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db) or use an existing one.\n2. [Create an Astra DB Keyspace](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-astra-db-keyspace) called `sag_loom` in your database.\n3. [Generate an Application Token](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#create-an-application-token) with the role of `Database Administrator` for the Organization that your Astra DB is in.\n4. Click the 'Open in Gitpod' link: [![Open in IDE](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/DataStax-Examples/todo-astra-jamstack-netlify)\n5. Once the app is finished launching in the Gitpod IDE, copy the `.env.example` file to a file named `.env` and fill the required values in from your Application Token and [Astra DB connection settings](https://github.com/DataStax-Examples/sample-app-template/blob/master/GETTING_STARTED.md#get-your-astra-db-connection-settings).\n6. Start the example by running the following command in the Gitpod console:\n```bash\nsource .env\nmix phx.server\n```\n\n## How this works\nThe app demonstrates working with DataStax Astra DB, Elixir, and Phoenix Liveviews together. The project attempts to make the best use of this stack. Messages histories are saved and loaded in Astra DB, while new messages are shared via Phoenix channels between all active users in a \"thread\". The goal is a fast, scalable, and durable chat/messaging application.\n"
}