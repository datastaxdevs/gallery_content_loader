{
    "key": "DatastaxDevs-workshop-cassandra-application-development",
    "tags": [
        "cassandra",
        "workshop",
        "nosql",
        "cql",
        "drivers"
    ],
    "urls": {
        "github": "https://github.com/datastaxdevs/workshop-cassandra-application-development",
        "youtube": [
            "https://www.youtube.com/watch?v=jCq0Eg0RnLU"
        ]
    },
    "last_modified": "Tue, 12 Dec 2023 16:42:33 GMT",
    "forks_count": 10,
    "stargazers_count": 11,
    "name": "Apache Cassandra Application Development",
    "description": "Learn about drivers, connectivity and requests by running a simple API with Apache Cassandra/Astra DB.",
    "duration": "120 minutes",
    "skilllevel": "Beginner",
    "language": [
        "python",
        "java",
        "javascript"
    ],
    "badge": "https://media.badgr.com/uploads/badges/b2f4df25-039d-42d2-a109-d72bd49d3f38.png",
    "likes": "29",
    "views": "845",
    "usecases": [],
    "readme": "<h1>Workshop - Application Development with Cassandra</h1>\n<p>Learn about drivers, connectivity and requests by running a simple API with<br />\nApache Cassandra/Astra DB as its data backend. The steps are available in <em>several languages</em>.</p>\n<p>Click here for the workshop <a href=\"slides/slides.pdf\">slide deck</a>.</p>\n<h3>Pre-requisites</h3>\n<p>This workshop, the third in a series, builds on the same example used in the two previous episodes (an IoT application to access temperature measurements collected from a network of sensors).</p>\n<p>Besides some knowledge of the <a href=\"https://www.datastax.com/learn/data-modeling-by-example/sensor-data-model\">example domain</a> used in this workshop, it is desirable to have familiarity with the concepts explored in the two previous installments of the series:</p>\n<ul>\n<li><a href=\"https://github.com/datastaxdevs/workshop-cassandra-fundamentals\">Cassandra Fundamentals</a></li>\n<li><a href=\"https://github.com/datastaxdevs/workshop-cassandra-data-modeling\">Data Modeling with Cassandra</a></li>\n</ul>\n<h4>Database pre-requisites</h4>\n<p>It is assumed in the following that you already have created your <a href=\"https://github.com/datastaxdevs/workshop-cassandra-fundamentals#4-create-your-astra-db-instance\">Astra DB instance</a> as instructed in the first episode, and that you have a valid &quot;DB Administrator&quot; Token.<br />\n<strong>Note</strong>: the Token that is created with the database does not have all permissions we need, so you <em>need</em> to manually <a href=\"https://awesome-astra.github.io/docs/pages/astra/create-token/\">create a Token</a> with the higher &quot;DB Administrator&quot; permission and use it in what comes next.</p>\n<p><em>In case you haven't your Astra DB yet, go ahead and create it now for free by clicking here:</em></p>\n<p><a href=\"https://astra.dev/yt-01-25-23\"><img src=\"images/create_astra_db_button.png?raw=true\" /></a></p>\n<blockquote>\n<p><em>Tip</em>: call the database <code>workshops</code> and the keyspace <code>sensor_data</code>.</p>\n</blockquote>\n<p><em>In case you already have a database <code>workshops</code> but no <code>sensor_data</code> keyspace, simply add it using the &quot;Add Keyspace&quot; button on the bottom right hand corner of your DB dashboard: please do so, avoiding the creation of another database with the same name. (Also, on the free tier you have to &quot;Resume&quot; the database if it is &quot;Hibernated&quot; for prolonged inactivity.)</em></p>\n<h2>1. Setup</h2>\n<h3>Astra DB &quot;Administrator&quot; token</h3>\n<p>If you don't have a &quot;DB Administrator&quot; token yet, log in to your Astra DB<br />\nand create a token with this role.<br />\nTo create the token, click on the &quot;...&quot; menu next to your database in the main<br />\nAstra dashboard and choose &quot;Generate token&quot;. Then make sure you select the &quot;DB Administrator&quot; role.<br />\n<em>Download or note down all components of the token before navigating away:<br />\nthese will not be shown again.</em><br />\n<a href=\"https://awesome-astra.github.io/docs/pages/astra/create-token/\">See here</a><br />\nfor more on token creation.</p>\n<blockquote>\n<p><strong>\u26a0\ufe0f Important</strong></p>\n<pre><code>The instructor will show the token creation on screen,\nbut will then destroy it immediately for security reasons.\n</code></pre>\n</blockquote>\n<p>Mind that, as mentioned already, <em>the default Token auto-created for you when<br />\ncreating the database is not powerful enough for us today.</em></p>\n<h3>Gitpod</h3>\n<p>First, open this repo in Gitpod by right-clicking the following button (&quot;open in new tab&quot;):</p>\n<p><a href=\"https://gitpod.io/#https://github.com/datastaxdevs/workshop-cassandra-application-development\"><img src=\"images/open_in_gitpod.svg?raw=true\" /></a></p>\n<p>In a couple of minutes you will have your Gitpod IDE up and running, with this repo cloned, ready and waiting for you (you may have to authorize the Gitpod single-sign-on to continue).</p>\n<blockquote>\n<p>You may see a dialog about &quot;opening this workspace in VS Code Desktop&quot;: you can safely dismiss it.</p>\n</blockquote>\n<p><em>Note</em>: The next steps are to be executed <em>within the Gitpod IDE.</em></p>\n<h3>Configure the Astra CLI</h3>\n<p>Astra CLI is preinstalled: configure it by providing your<br />\n<code>AstraCS:...</code> database token when prompted:</p>\n<pre lang=\"bash\"><code>astra setup\n</code></pre>\n<p>(<em>Optional)</em> Now you can use the CLI to get some info on your database(s):</p>\n<pre lang=\"bash\"><code>astra db list\nastra db get workshops\n</code></pre>\n<details><summary>Click here if you have <strong>multiple databases</strong> called \"workshops\"</summary>\n<p>DB names are not required to be unique: what <em>is</em> unique is the <a href=\"https://awesome-astra.github.io/docs/pages/astra/faq/#where-should-i-find-a-database-identifier\">&quot;Database ID&quot;</a>.</p>\n<p>In case you find yourself having more than one &quot;workshops",
    "_id": "DatastaxDevs-workshop-cassandra-application-development",
    "readme_markdown": "# Workshop - Application Development with Cassandra\n\nLearn about drivers, connectivity and requests by running a simple API with\nApache Cassandra/Astra DB as its data backend. The steps are available in _several languages_.\n\nClick here for the workshop [slide deck](slides/slides.pdf).\n\n### Pre-requisites\n\nThis workshop, the third in a series, builds on the same example used in the two previous episodes (an IoT application to access temperature measurements collected from a network of sensors).\n\nBesides some knowledge of the [example domain](https://www.datastax.com/learn/data-modeling-by-example/sensor-data-model) used in this workshop, it is desirable to have familiarity with the concepts explored in the two previous installments of the series:\n\n- [Cassandra Fundamentals](https://github.com/datastaxdevs/workshop-cassandra-fundamentals)\n- [Data Modeling with Cassandra](https://github.com/datastaxdevs/workshop-cassandra-data-modeling)\n\n#### Database pre-requisites\n\nIt is assumed in the following that you already have created your [Astra DB instance](https://github.com/datastaxdevs/workshop-cassandra-fundamentals#4-create-your-astra-db-instance) as instructed in the first episode, and that you have a valid \"DB Administrator\" Token.\n**Note**: the Token that is created with the database does not have all permissions we need, so you _need_ to manually [create a Token](https://awesome-astra.github.io/docs/pages/astra/create-token/) with the higher \"DB Administrator\" permission and use it in what comes next.\n\n_In case you haven't your Astra DB yet, go ahead and create it now for free by clicking here:_\n\n<a href=\"https://astra.dev/yt-01-25-23\"><img src=\"images/create_astra_db_button.png?raw=true\" /></a>\n\n> _Tip_: call the database `workshops` and the keyspace `sensor_data`.\n\n_In case you already have a database `workshops` but no `sensor_data` keyspace, simply add it using the \"Add Keyspace\" button on the bottom right hand corner of your DB dashboard: please do so, avoiding the creation of another database with the same name. (Also, on the free tier you have to \"Resume\" the database if it is \"Hibernated\" for prolonged inactivity.)_\n\n## 1. Setup\n\n### Astra DB \"Administrator\" token\n\nIf you don't have a \"DB Administrator\" token yet, log in to your Astra DB\nand create a token with this role.\nTo create the token, click on the \"...\" menu next to your database in the main\nAstra dashboard and choose \"Generate token\". Then make sure you select the \"DB Administrator\" role.\n_Download or note down all components of the token before navigating away:\nthese will not be shown again._\n[See here](https://awesome-astra.github.io/docs/pages/astra/create-token/)\nfor more on token creation.\n\n> **\u26a0\ufe0f Important**\n> ```\n> The instructor will show the token creation on screen,\n> but will then destroy it immediately for security reasons.\n> ```\n\nMind that, as mentioned already, _the default Token auto-created for you when\ncreating the database is not powerful enough for us today._\n\n### Gitpod\n\nFirst, open this repo in Gitpod by right-clicking the following button (\"open in new tab\"):\n\n<a href=\"https://gitpod.io/#https://github.com/datastaxdevs/workshop-cassandra-application-development\"><img src=\"images/open_in_gitpod.svg?raw=true\" /></a>\n\nIn a couple of minutes you will have your Gitpod IDE up and running, with this repo cloned, ready and waiting for you (you may have to authorize the Gitpod single-sign-on to continue).\n\n> You may see a dialog about \"opening this workspace in VS Code Desktop\": you can safely dismiss it.\n\n_Note_: The next steps are to be executed _within the Gitpod IDE._\n\n### Configure the Astra CLI\n\nAstra CLI is preinstalled: configure it by providing your\n`AstraCS:...` database token when prompted:\n\n```bash\nastra setup\n```\n\n(_Optional)_ Now you can use the CLI to get some info on your database(s):\n\n```bash\nastra db list\nastra db get workshops\n```\n\n<details><summary>Click here if you have <strong>multiple databases</strong> called \"workshops\"</summary>\n\nDB names are not required to be unique: what _is_ unique is the [\"Database ID\"](https://awesome-astra.github.io/docs/pages/astra/faq/#where-should-i-find-a-database-identifier).\n\nIn case you find yourself having more than one \"workshops\" database, you can provide the ID instead of the name to the CLI commands\nand, being able to unambiguously determine the target, it will work flawlessly.\n\n</details>\n\n### Create and populate tables\n\nThe Astra CLI can also launch a `cqlsh` session for you, automatically connected to your database. Use this feature to execute a `cql` script that resets the contents of the `sensor_data` keyspace, creating the right tables and writing representative data on them:\n\n```bash\n# Make sure the DB exists (resuming it if hibernated)\nastra db create workshops -k sensor_data --if-not-exist --wait\n\n# Launch the initialization script\nastra db cqlsh workshops -f initialize.cql\n```\n\nYou are encouraged to peek at the contents of the script to see what it does.\n\n_"
}